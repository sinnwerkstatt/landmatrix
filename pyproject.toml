[project]
name = "landmatrix"
version = "0.1.0"
license = "AGPL-3.0+"
authors = ["sinnwerkstatt Medienagentur GmbH <support@sinnwerkstatt.com>"]
description = "Land Matrix"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "django<5.1",
    "django-cors-headers>=4.7.0",
    "django-email-bandit>=2.0",
    "django-environ>=0.12.0",
    "django-modeltranslation>=0.19.12",
    "django-pydantic-field>=0.3.12",
    "djangorestframework>=3.15.2",
    "djangorestframework-dataclasses>=1.3.1",
    "djangorestframework-gis>=1.1",
    "doit>=0.36.0",
    "drf-spectacular[sidecar]>=0.28.0",
    "gunicorn>=23.0.0",
    "icecream>=2.1.4",
    "nanoid>=2.0.0",
    "openpyxl>=3.1.5",
    "polib>=1.2.0",
    "psycopg[binary]>=3.2.4",
    "pydantic>=2.10.6",
    "python-dateutil>=2.9.0.post0",
    "sentry-sdk>=2.22.0",
    "simplejson>=3.20.1",
    "tweepy>=4.15.0",
    "tzdata>=2025.1",
    "unicodecsv>=0.14.1",
    "wagtail<6.4",
    "wagtail-font-awesome-svg>=1.0.1",
    "wagtail-headless-preview>=0.8.0",
    "wagtail-modeltranslation>=0.15.2",
    "wagtail-orderable>=1.2.0",
]

[dependency-groups]
dev = [
    "django-extensions>=3.2.3",
    "django-stubs[compatible-mypy]>=5.1.3",
    "djangorestframework-stubs>=1.4.0",
    "freezegun>=1.5.1",
    "ipdb>=0.13.13",
    "mkdocs>=1.6.1",
    "mypy>=1.15.0",
    "pydot>=3.0.4",
    "pygments>=2.19.1",
    "pytest-cov>=6.0.0",
    "pytest-django>=4.10.0",
    "pytest-watch>=4.2.0",
    "ruff>=0.9.6",
    "termtables>=0.2.4",
    "tqdm>=4.67.1",
    "types-colorama>=0.4.15.20240311",
    "types-markdown>=3.7.0.20241204",
    "types-openpyxl>=3.1.5.20241225",
    "types-polib>=1.2.0.20250114",
    "types-pygments>=2.19.0.20250107",
    "types-simplejson>=3.20.0.20250218",
    "types-tqdm>=4.67.0.20241221",
]

[tool.ruff]
exclude = [
    ".venv",
    ".eggs",
    ".git",
    "migrations",
    "static-collected",
    "node_modules"
]
respect-gitignore = false # https://github.com/astral-sh/ruff/issues/9381
target-version = "py312"

[tool.ruff.lint]
# https://docs.astral.sh/ruff/rules/
select = [
    "E", # pycodestyle
    "C4", # flake8-comprehensions
    "F", # pyflakes
    "B", # flake8-bugbear
    "I", # isort
    "DJ", # flake8-django
    "UP", # pyupgrade
    "S" # flake8-bandit
]
ignore = ["E501"]

[tool.ruff.lint.per-file-ignores]
"config/settings/**.py" = ["F403", "F405"]
"/**/test_*.py" = [
    # at least this three should be fine in tests:
    "S101", # asserts allowed in tests...
    "ARG", # Unused function args -> fixtures nevertheless are functionally relevant...
    "FBT", # Don't care about booleans as positional arguments in tests, e.g. via @pytest.mark.parametrize()
    # The below are debateable
    "PLR2004", # Magic value used in comparison, ...
    "S311", # Standard pseudo-random generators are not suitable for cryptographic purposes
]

[tool.ruff.lint.isort]
known-first-party = ["apps"]
section-order = [
    "future",
    "standard-library",
    "third-party",
    "django",
    "first-party",
    "local-folder"
]

[tool.ruff.lint.isort.sections]
"django" = [
    "django",
    "wagtail",
    "rest_framework",
    "drf_spectacular",
    "wagtail_headless_preview",
    "modelcluster"
]


# https://mypy.readthedocs.io/en/latest/config_file.html#using-a-pyproject-toml-file
[tool.mypy]
plugins = ["mypy_django_plugin.main", "mypy_drf_plugin.main"]
exclude = ["migrations"]
strict_equality = true
check_untyped_defs = true

[[tool.mypy.overrides]]
module = [
    "wagtail.*",
    "environ",
    "wagtail_headless_preview.*",
    "modelcluster.*",
    "modeltranslation.*"]
ignore_missing_imports = true


[tool.django-stubs]
django_settings_module = "config.settings.dev"


[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "config.settings.dev"
python_files = ["test_*.py"]
addopts = ["--reuse-db", "-p no:warnings"]
#filterwarnings = [
#    "ignore::django.utils.deprecation.RemovedInDjango51Warning",
#    "ignore::django.utils.deprecation.RemovedInDjango60Warning",
#]

[tool.pytest-watch]
nobeep = true
