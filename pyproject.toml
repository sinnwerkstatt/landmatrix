[tool.poetry]
name = "landmatrix"
version = "0.1.0"
license = "AGPL-3.0+"
authors = ["sinnwerkstatt Medienagentur GmbH <support@sinnwerkstatt.com>"]
package-mode = false
readme = "README.md"
description = "Land Matrix"

[tool.poetry.dependencies]
python = "^3.10"
Django = "<5.1"
wagtail = "<6.4"
psycopg = { version = "*", extras = ['binary'] }

djangorestframework = "*"
djangorestframework-gis = "*"
djangorestframework-dataclasses = "*"
drf-spectacular = { version = "*", extras = ['sidecar'] }

pydantic = "*"
django-pydantic-field = "*" # only used in migrations -> Can be removed after squashing
django-cors-headers = "*"
django-environ = "*"
django-modeltranslation = "*"

wagtail-font-awesome-svg = "*"
wagtail-modeltranslation = "*"
wagtail-orderable = "*"
wagtail-headless-preview = "*"

nanoid = "*"
openpyxl = "*"
polib = "*"  # for PO to JSON
python-dateutil = "*"
simplejson = "*"
tweepy = "*"
unicodecsv = "*"

#plumbing
doit = "*"
sentry_sdk = "*"
gunicorn = "*"
tzdata = "*"
icecream = "*"
django-email-bandit = "*"

[tool.poetry.group.dev.dependencies]
ipdb = "*"
mypy = "*"
django-extensions = "*"
pytest-django = "*"
pytest-cov = "*"
pytest-watch = "*"
pygments = "*"
mkdocs = "*"
pydot = "*"
tqdm = "*"
termtables = "*"
freezegun = "*"

ruff = "*"

# stubs
django-stubs = { extras = ["compatible-mypy"], version = "^1.14.0" }
djangorestframework-stubs = { extras = ["compatible-mypy"], version = "^1.8.0" }

# types
types-openpyxl = "^3.0.4.5"
types-markdown = "^3.4.2.5"
types-pygments = "^2.14.0.6"
types-colorama = "^0.4.15.8"
types-polib = "^1.2.0.0"
types-simplejson = "^3.18.0.1"
types-tqdm = "^4.65.0.0"


[tool.ruff]
exclude = [
    ".eggs",
    ".git",
    "migrations",
    "static-collected",
    "node_modules"
]
respect-gitignore = false # https://github.com/astral-sh/ruff/issues/9381
target-version = "py312"

[tool.ruff.lint]
# https://docs.astral.sh/ruff/rules/
select = [
    "E", # pycodestyle
    "C4", # flake8-comprehensions
    "F", # pyflakes
    "B", # flake8-bugbear
    "I", # isort
    "DJ", # flake8-django
    "UP", # pyupgrade
    "S" # flake8-bandit
]
ignore = ["E501"]

[tool.ruff.lint.per-file-ignores]
"config/settings/**.py" = ["F403", "F405"]
"/**/test_*.py" = [
    # at least this three should be fine in tests:
    "S101", # asserts allowed in tests...
    "ARG", # Unused function args -> fixtures nevertheless are functionally relevant...
    "FBT", # Don't care about booleans as positional arguments in tests, e.g. via @pytest.mark.parametrize()
    # The below are debateable
    "PLR2004", # Magic value used in comparison, ...
    "S311", # Standard pseudo-random generators are not suitable for cryptographic purposes
]

[tool.ruff.lint.isort]
known-first-party = ["apps"]
section-order = [
    "future",
    "standard-library",
    "third-party",
    "django",
    "first-party",
    "local-folder"
]

[tool.ruff.lint.isort.sections]
"django" = [
    "django",
    "wagtail",
    "rest_framework",
    "drf_spectacular",
    "wagtail_headless_preview",
    "modelcluster"
]


# https://mypy.readthedocs.io/en/latest/config_file.html#using-a-pyproject-toml-file
[tool.mypy]
plugins = ["mypy_django_plugin.main", "mypy_drf_plugin.main"]
exclude = ["migrations"]
strict_equality = true
check_untyped_defs = true

[[tool.mypy.overrides]]
module = [
    "wagtail.*",
    "environ",
    "wagtail_headless_preview.*",
    "modelcluster.*",
    "modeltranslation.*"]
ignore_missing_imports = true


[tool.django-stubs]
django_settings_module = "config.settings.dev"


[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "config.settings.ci"
python_files = ["test_*.py"]
addopts = ["--reuse-db", "-p no:warnings"]
#filterwarnings = [
#    "ignore::django.utils.deprecation.RemovedInDjango51Warning",
#    "ignore::django.utils.deprecation.RemovedInDjango60Warning",
#]

[tool.pytest-watch]
nobeep = true
