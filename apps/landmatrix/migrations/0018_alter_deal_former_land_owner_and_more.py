# Generated by Django 5.0 on 2024-01-06 10:45

import apps.landmatrix.models.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('landmatrix', '0017_alter_involvement_loans_date_and_more'),
    ]

    operations = [
        migrations.AlterField(
            model_name='deal',
            name='former_land_owner',
            field=apps.landmatrix.models.fields.ArrayField(base_field=models.CharField(choices=[('STATE', 'State'), ('PRIVATE_SMALLHOLDERS', 'Private (smallholders)'), ('PRIVATE_LARGE_SCALE', 'Private (large-scale farm)'), ('COMMUNITY', 'Community'), ('INDIGENOUS_PEOPLE', 'Indigenous people'), ('OTHER', 'Other')]), blank=True, null=True, size=None, verbose_name='Former land owner'),
        ),
        migrations.AlterField(
            model_name='deal',
            name='materialized_benefits',
            field=apps.landmatrix.models.fields.ArrayField(base_field=models.CharField(choices=[('HEALTH', 'Health'), ('EDUCATION', 'Education'), ('PRODUCTIVE_INFRASTRUCTURE', 'Productive infrastructure (e.g. irrigation, tractors, machinery...)'), ('ROADS', 'Roads'), ('CAPACITY_BUILDING', 'Capacity building'), ('FINANCIAL_SUPPORT', 'Financial support'), ('COMMUNITY_SHARES', 'Community shares in the investment project'), ('OTHER', 'Other')]), blank=True, null=True, size=None, verbose_name='Materialized benefits for local communities'),
        ),
        migrations.AlterField(
            model_name='deal',
            name='promised_benefits',
            field=apps.landmatrix.models.fields.ArrayField(base_field=models.CharField(choices=[('HEALTH', 'Health'), ('EDUCATION', 'Education'), ('PRODUCTIVE_INFRASTRUCTURE', 'Productive infrastructure (e.g. irrigation, tractors, machinery...)'), ('ROADS', 'Roads'), ('CAPACITY_BUILDING', 'Capacity building'), ('FINANCIAL_SUPPORT', 'Financial support'), ('COMMUNITY_SHARES', 'Community shares in the investment project'), ('OTHER', 'Other')]), blank=True, null=True, size=None, verbose_name='Promised benefits for local communities'),
        ),
        migrations.AlterField(
            model_name='dealversion2',
            name='former_land_owner',
            field=apps.landmatrix.models.fields.ChoiceArrayField(base_field=models.CharField(choices=[('STATE', 'State'), ('PRIVATE_SMALLHOLDERS', 'Private (smallholders)'), ('PRIVATE_LARGE_SCALE', 'Private (large-scale farm)'), ('COMMUNITY', 'Community'), ('INDIGENOUS_PEOPLE', 'Indigenous people'), ('OTHER', 'Other')]), blank=True, default=list, size=None, verbose_name='Former land owner'),
        ),
        migrations.AlterField(
            model_name='dealversion2',
            name='materialized_benefits',
            field=apps.landmatrix.models.fields.ChoiceArrayField(base_field=models.CharField(choices=[('HEALTH', 'Health'), ('EDUCATION', 'Education'), ('PRODUCTIVE_INFRASTRUCTURE', 'Productive infrastructure (e.g. irrigation, tractors, machinery...)'), ('ROADS', 'Roads'), ('CAPACITY_BUILDING', 'Capacity building'), ('FINANCIAL_SUPPORT', 'Financial support'), ('COMMUNITY_SHARES', 'Community shares in the investment project'), ('OTHER', 'Other')]), blank=True, default=list, size=None, verbose_name='Materialized benefits for local communities'),
        ),
        migrations.AlterField(
            model_name='dealversion2',
            name='promised_benefits',
            field=apps.landmatrix.models.fields.ChoiceArrayField(base_field=models.CharField(choices=[('HEALTH', 'Health'), ('EDUCATION', 'Education'), ('PRODUCTIVE_INFRASTRUCTURE', 'Productive infrastructure (e.g. irrigation, tractors, machinery...)'), ('ROADS', 'Roads'), ('CAPACITY_BUILDING', 'Capacity building'), ('FINANCIAL_SUPPORT', 'Financial support'), ('COMMUNITY_SHARES', 'Community shares in the investment project'), ('OTHER', 'Other')]), blank=True, default=list, size=None, verbose_name='Promised benefits for local communities'),
        ),
        migrations.AlterField(
            model_name='investor',
            name='classification',
            field=models.CharField(blank=True, choices=[('GOVERNMENT', 'Government'), ('GOVERNMENT_INSTITUTION', 'Government institution'), ('STATE_OWNED_COMPANY', 'State-/government (owned) company'), ('SEMI_STATE_OWNED_COMPANY', 'Semi state-owned company'), ('ASSET_MANAGEMENT_FIRM', 'Asset management firm'), ('BILATERAL_DEVELOPMENT_BANK', 'Bilateral Development Bank / Development Finance Institution'), ('STOCK_EXCHANGE_LISTED_COMPANY', 'Stock-exchange listed company'), ('COMMERCIAL_BANK', 'Commercial Bank'), ('INSURANCE_FIRM', 'Insurance firm'), ('INVESTMENT_BANK', 'Investment Bank'), ('INVESTMENT_FUND', 'Investment fund'), ('MULTILATERAL_DEVELOPMENT_BANK', 'Multilateral Development Bank (MDB)'), ('PRIVATE_COMPANY', 'Private company'), ('PRIVATE_EQUITY_FIRM', 'Private equity firm'), ('INDIVIDUAL_ENTREPRENEUR', 'Individual entrepreneur'), ('NON_PROFIT', 'Non - Profit organization (e.g. Church, University etc.)'), ('OTHER', 'Other')], null=True, verbose_name='Classification'),
        ),
        migrations.AlterField(
            model_name='investorversion2',
            name='classification',
            field=models.CharField(blank=True, choices=[('GOVERNMENT', 'Government'), ('GOVERNMENT_INSTITUTION', 'Government institution'), ('STATE_OWNED_COMPANY', 'State-/government (owned) company'), ('SEMI_STATE_OWNED_COMPANY', 'Semi state-owned company'), ('ASSET_MANAGEMENT_FIRM', 'Asset management firm'), ('BILATERAL_DEVELOPMENT_BANK', 'Bilateral Development Bank / Development Finance Institution'), ('STOCK_EXCHANGE_LISTED_COMPANY', 'Stock-exchange listed company'), ('COMMERCIAL_BANK', 'Commercial Bank'), ('INSURANCE_FIRM', 'Insurance firm'), ('INVESTMENT_BANK', 'Investment Bank'), ('INVESTMENT_FUND', 'Investment fund'), ('MULTILATERAL_DEVELOPMENT_BANK', 'Multilateral Development Bank (MDB)'), ('PRIVATE_COMPANY', 'Private company'), ('PRIVATE_EQUITY_FIRM', 'Private equity firm'), ('INDIVIDUAL_ENTREPRENEUR', 'Individual entrepreneur'), ('NON_PROFIT', 'Non - Profit organization (e.g. Church, University etc.)'), ('OTHER', 'Other')], null=True, verbose_name='Classification'),
        ),
    ]
