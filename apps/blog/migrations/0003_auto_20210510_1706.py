# Generated by Django 2.2.17 on 2021-05-10 15:06
from wagtail.core.rich_text import RichText

import apps.wagtailcms.blocks
from django.db import migrations
import wagtail.core.blocks
import wagtail.core.fields
import wagtail.embeds.blocks
import wagtail.images.blocks


def convert_to_streamfield(apps, schema_editor):
    BlogPage = apps.get_model("blog", "BlogPage")
    for page in BlogPage.objects.all():
        if page.body.raw_text and not page.body:
            page.body = [('paragraph', RichText(page.body.raw_text))]
            page.save()


def convert_to_richtext(apps, schema_editor):
    BlogPage = apps.get_model("blog", "BlogPage")
    for page in BlogPage.objects.all():
        if page.body.raw_text is None:
            raw_text = ''.join([
                child.value.source for child in page.body
                if child.block_type == 'paragraph'
            ])
            page.body = raw_text
            page.save()


class Migration(migrations.Migration):

    dependencies = [
        ('blog', '0002_auto_20201230_1038'),
    ]

    operations = [
        migrations.AlterField(
            model_name='blogpage',
            name='body',
            field=wagtail.core.fields.StreamField([('paragraph', apps.wagtailcms.blocks.RichTextBlock(features=['bold', 'italic', 'h2', 'h3', 'ol', 'ul', 'hr', 'link', 'image', 'document-link'])), ('link', wagtail.core.blocks.StructBlock([('cls', wagtail.core.blocks.ChoiceBlock(choices=[('btn', 'Button'), ('btn btn-with-space', 'Button (with space)')], label='Type', required=False)), ('url', wagtail.core.blocks.URLBlock(label='URL')), ('text', wagtail.core.blocks.CharBlock())], icon='link')), ('anchor', wagtail.core.blocks.StructBlock([('slug', wagtail.core.blocks.CharBlock())], icon='link')), ('image', apps.wagtailcms.blocks.ImageBlock()), ('linked_image', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('url', wagtail.core.blocks.URLBlock(label='URL', required=False)), ('caption', apps.wagtailcms.blocks.RichTextBlock(required=False))])), ('media', wagtail.embeds.blocks.EmbedBlock(icon='media')), ('gallery', wagtail.core.blocks.StructBlock([('columns', wagtail.core.blocks.ChoiceBlock(choices=[(1, '1 column'), (2, '2 columns'), (3, '3 columns'), (4, '4 columns'), (5, '5 columns'), (6, '6 columns')], icon='fa fa-columns')), ('images', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('url', wagtail.core.blocks.URLBlock(label='URL', required=False)), ('caption', apps.wagtailcms.blocks.RichTextBlock(required=False))])))])), ('slider', wagtail.core.blocks.StructBlock([('images', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('url', wagtail.core.blocks.URLBlock(label='URL', required=False)), ('caption', apps.wagtailcms.blocks.RichTextBlock(required=False))])))])), ('section_divider', wagtail.core.blocks.StructBlock([])), ('faqs_block', wagtail.core.blocks.StructBlock([('faqs', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('slug', wagtail.core.blocks.CharBlock()), ('question', wagtail.core.blocks.CharBlock()), ('answer', apps.wagtailcms.blocks.RichTextBlock())])))]))], blank=True, verbose_name='body'),
        ),

        migrations.RunPython(
            convert_to_streamfield,
            convert_to_richtext,
        ),
    ]
