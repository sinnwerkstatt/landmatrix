# Generated by Django 5.0.4 on 2024-08-01 10:56

import django.contrib.postgres.fields
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('accountability', '0004_alter_bookmark_unique_together'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='project',
            name='animals',
        ),
        migrations.RemoveField(
            model_name='project',
            name='area_max',
        ),
        migrations.RemoveField(
            model_name='project',
            name='area_min',
        ),
        migrations.RemoveField(
            model_name='project',
            name='country_id',
        ),
        migrations.RemoveField(
            model_name='project',
            name='crops',
        ),
        migrations.RemoveField(
            model_name='project',
            name='forest_concession',
        ),
        migrations.RemoveField(
            model_name='project',
            name='implementation_status',
        ),
        migrations.RemoveField(
            model_name='project',
            name='initiation_year_max',
        ),
        migrations.RemoveField(
            model_name='project',
            name='initiation_year_min',
        ),
        migrations.RemoveField(
            model_name='project',
            name='initiation_year_unknown',
        ),
        migrations.RemoveField(
            model_name='project',
            name='intention_of_investment',
        ),
        migrations.RemoveField(
            model_name='project',
            name='intention_of_investment_unknown',
        ),
        migrations.RemoveField(
            model_name='project',
            name='investor_country_id',
        ),
        migrations.RemoveField(
            model_name='project',
            name='investor_id',
        ),
        migrations.RemoveField(
            model_name='project',
            name='minerals',
        ),
        migrations.RemoveField(
            model_name='project',
            name='nature_of_deal',
        ),
        migrations.RemoveField(
            model_name='project',
            name='negotiation_status',
        ),
        migrations.RemoveField(
            model_name='project',
            name='region_id',
        ),
        migrations.RemoveField(
            model_name='project',
            name='transnational',
        ),
        migrations.CreateModel(
            name='Filters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region_id', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveIntegerField(), blank=True, null=True, size=None)),
                ('country_id', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveIntegerField(), blank=True, null=True, size=None)),
                ('area_min', models.PositiveIntegerField(blank=True, null=True)),
                ('area_max', models.PositiveIntegerField(blank=True, null=True)),
                ('negotiation_status', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('EXPRESSION_OF_INTEREST', 'Intended (Expression of interest)'), ('UNDER_NEGOTIATION', 'Intended (Under negotiation)'), ('MEMORANDUM_OF_UNDERSTANDING', 'Intended (Memorandum of understanding)'), ('ORAL_AGREEMENT', 'Concluded (Oral Agreement)'), ('CONTRACT_SIGNED', 'Concluded (Contract signed)'), ('CHANGE_OF_OWNERSHIP', 'Concluded (Change of ownership)'), ('NEGOTIATIONS_FAILED', 'Failed (Negotiations failed)'), ('CONTRACT_CANCELED', 'Failed (Contract cancelled)'), ('CONTRACT_EXPIRED', 'Contract expired')]), blank=True, null=True, size=None)),
                ('nature_of_deal', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('OUTRIGHT_PURCHASE', 'Outright purchase'), ('LEASE', 'Lease'), ('CONCESSION', 'Concession'), ('EXPLOITATION_PERMIT', 'Exploitation permit / license / concession (for mineral resources)'), ('PURE_CONTRACT_FARMING', 'Pure contract farming'), ('OTHER', 'Other')]), blank=True, null=True, size=None)),
                ('investor_id', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveIntegerField(), blank=True, null=True, size=None)),
                ('investor_country_id', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveIntegerField(), blank=True, null=True, size=None)),
                ('initiation_year_min', models.PositiveIntegerField(blank=True, null=True)),
                ('initiation_year_max', models.PositiveIntegerField(blank=True, null=True)),
                ('initiation_year_unknown', models.BooleanField(default=True)),
                ('implementation_status', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('PROJECT_NOT_STARTED', 'Project not started'), ('STARTUP_PHASE', 'Startup phase (no production)'), ('IN_OPERATION', 'In operation (production)'), ('PROJECT_ABANDONED', 'Project abandoned')]), blank=True, null=True, size=None)),
                ('intention_of_investment', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('BIOFUELS', 'Biomass for biofuels'), ('BIOMASS_ENERGY_GENERATION', 'Biomass for energy generation (agriculture)'), ('FODDER', 'Fodder'), ('FOOD_CROPS', 'Food crops'), ('LIVESTOCK', 'Livestock'), ('NON_FOOD_AGRICULTURE', 'Non-food agricultural commodities'), ('AGRICULTURE_UNSPECIFIED', 'Agriculture unspecified'), ('BIOMASS_ENERGY_PRODUCTION', 'Biomass for energy generation (forestry)'), ('CARBON', 'For carbon sequestration/REDD'), ('FOREST_LOGGING', 'Forest logging / management for wood and fiber'), ('TIMBER_PLANTATION', 'Timber plantation for wood and fiber'), ('FORESTRY_UNSPECIFIED', 'Forestry unspecified'), ('SOLAR_PARK', 'Solar park'), ('WIND_FARM', 'Wind farm'), ('RENEWABLE_ENERGY', 'Renewable energy unspecified'), ('CONVERSATION', 'Conservation'), ('INDUSTRY', 'Industry'), ('LAND_SPECULATION', 'Land speculation'), ('MINING', 'Mining'), ('OIL_GAS_EXTRACTION', 'Oil / Gas extraction'), ('TOURISM', 'Tourism'), ('OTHER', 'Other')]), blank=True, null=True, size=None)),
                ('intention_of_investment_unknown', models.BooleanField(default=False)),
                ('crops', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('ACC', 'Accacia'), ('ALF', 'Alfalfa'), ('ALG', 'Seaweed / Macroalgae(unspecified)'), ('ALM', 'Almond'), ('ALV', 'Aloe Vera'), ('APL', 'Apple'), ('AQU', 'Aquaculture (unspecified crops)'), ('BAM', 'Bamboo'), ('BAN', 'Banana'), ('BEA', 'Bean'), ('BOT', 'Bottle Gourd'), ('BRL', 'Barley'), ('BWT', 'Buckwheat'), ('CAC', 'Cacao'), ('CAS', 'Cassava (Maniok)'), ('CAW', 'Cashew'), ('CHA', 'Chat'), ('CHE', 'Cherries'), ('CNL', 'Canola'), ('COC', 'Coconut'), ('COF', 'Coffee Plant'), ('COT', 'Cotton'), ('CRL', 'Cereals (unspecified)'), ('CRN', 'Corn (Maize)'), ('CRO', 'Croton'), ('CST', 'Castor Oil Plant'), ('CTR', 'Citrus Fruits (unspecified)'), ('DIL', 'Dill'), ('EUC', 'Eucalyptus'), ('FLW', 'Flowers (unspecified)'), ('FNT', 'Fig-Nut'), ('FOD', 'Fodder Plants (unspecified)'), ('FOO', 'Food crops (unspecified)'), ('FRT', 'Fruit (unspecified)'), ('GRA', 'Grapes'), ('GRN', 'Grains (unspecified)'), ('HRB', 'Herbs (unspecified)'), ('JTR', 'Jatropha'), ('LNT', 'Lentils'), ('MAN', 'Mango'), ('MUS', 'Mustard'), ('OAT', 'Oats'), ('OIL', 'Oil Seeds (unspecified)'), ('OLE', 'Oleagionous plant'), ('OLV', 'Olives'), ('ONI', 'Onion'), ('OPL', 'Oil Palm'), ('OTH', 'Other crops'), ('PAL', 'Palms'), ('PAP', 'Papaya'), ('PAS', 'Passion fruit'), ('PEA', 'Peanut (groundnut)'), ('PEP', 'Pepper'), ('PES', 'Peas'), ('PIE', 'Pine'), ('PIN', 'Pineapple'), ('PLS', 'Pulses (unspecified)'), ('POM', 'Pomegranate'), ('PON', 'Pongamia Pinnata'), ('PTT', 'Potatoes'), ('RAP', 'Rapeseed'), ('RCH', 'Rice (hybrid)'), ('RIC', 'Rice'), ('ROS', 'Roses'), ('RUB', 'Rubber tree'), ('RYE', 'Rye'), ('SEE', 'Seeds Production (unspecified)'), ('SES', 'Sesame'), ('SOR', 'Sorghum'), ('SOY', 'Soya Beans'), ('SPI', 'Spices (unspecified)'), ('SSL', 'Sisal'), ('SUB', 'Sugar beet'), ('SUC', 'Sugar Cane'), ('SUG', 'Sugar (unspecified)'), ('SUN', 'Sun Flower'), ('SWP', 'Sweet Potatoes'), ('TBC', 'Tobacco'), ('TEA', 'Tea'), ('TEF', 'Teff'), ('TEK', 'Teak'), ('TOM', 'Tomatoes'), ('TRE', 'Trees (unspecified)'), ('VGT', 'Vegetables (unspecified)'), ('VIN', 'Vineyard'), ('WHT', 'Wheat'), ('YAM', 'Yam')]), blank=True, null=True, size=None)),
                ('animals', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('AQU', 'Aquaculture (animals)'), ('BEE', 'Beef Cattle'), ('CTL', 'Cattle'), ('DCT', 'Dairy Cattle'), ('FSH', 'Fish'), ('GOT', 'Goats'), ('OTH', 'Other livestock'), ('PIG', 'Pork'), ('POU', 'Poultry'), ('SHP', 'Sheep'), ('SHR', 'Shrimp')]), blank=True, null=True, size=None)),
                ('minerals', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('ALU', 'Aluminum'), ('ASP', 'Asphaltite'), ('ATC', 'Anthracite'), ('BAR', 'Barite'), ('BAS', 'Basalt'), ('BAX', 'Bauxite'), ('BEN', 'Bentonite'), ('BUM', 'Building materials'), ('CAR', 'Carbon'), ('CHR', 'Chromite'), ('CLA', 'Clay'), ('COA', 'Coal'), ('COB', 'Cobalt'), ('COP', 'Copper'), ('DIA', 'Diamonds'), ('EME', 'Emerald'), ('FLD', 'Feldspar'), ('FLO', 'Fluoride'), ('GAS', 'Gas'), ('GLD', 'Gold'), ('GRT', 'Granite'), ('GRV', 'Gravel'), ('HEA', 'Heavy Mineral Sands'), ('ILM', 'Ilmenite'), ('IRO', 'Iron'), ('JAD', 'Jade'), ('LED', 'Lead'), ('LIM', 'Limestone'), ('LIT', 'Lithium'), ('MAG', 'Magnetite'), ('MBD', 'Molybdenum'), ('MGN', 'Manganese'), ('MRB', 'Marble'), ('NIK', 'Nickel'), ('OTH', 'Other minerals'), ('PET', 'Petroleum'), ('PHP', 'Phosphorous'), ('PLT', 'Platinum'), ('PUM', 'Hydrocarbons (e.g. crude oil)'), ('PYR', 'Pyrolisis Plant'), ('RUT', 'Rutile'), ('SAN', 'Sand'), ('SIC', 'Silica'), ('SIL', 'Silver'), ('SLT', 'Salt'), ('STO', 'Stone'), ('TIN', 'Tin'), ('TTM', 'Titanium'), ('URM', 'Uranium'), ('ZNC', 'Zinc')]), blank=True, null=True, size=None)),
                ('transnational', models.BooleanField(blank=True, null=True)),
                ('forest_concession', models.BooleanField(blank=True, null=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='filters', to='accountability.project')),
            ],
        ),
    ]
